#!/usr/bin/env ruby -I./lib

require 'rubyheap'
require 'trollop'
require 'copier'
require 'yaml'
require 'refh/version'

opts = Trollop::options do
  version "refh #{Refh::VERSION} -- https://github.com/Raynes/refh"
  banner <<-EOS
Refh is a simple command-line application for pasting to https://refheap.com

Usage:
      refh [options] <filename>
      refh [options]

If the second form is used, input will be expected on stdin.

Options are:
EOS

  opt :private, "Make the paste private."
  opt :language, "Set the language for this paste.", :type => String
  opt :user, "Set username.", :type => String
  opt :token, "Set token.", :type => String
  opt :anon, "Make this paste anonymous, regardless of username and token settings."
  opt :copy, "Copy the paste URL to your clipboard."
end

config_file = File.expand_path("~/.refh.yml")
if File.exists? config_file
  config = YAML.load_file File.expand_path("~/.refh.yml")
  config = config || {}
else
  config = {}
end

# The user and token options override the default settings in the yaml
# config.
user = opts[:user] || config['user']
token = opts[:token] || config['token']

if user && token && !opts[:anon]
  heap = Refheap::Paste.new user, token
else
  heap = Refheap::Paste.new
end

create_opts = {:private => opts[:private],
               :language => opts[:language]}

file = ARGV.first
url = nil
if file
  unless create_opts[:language]
    file = File.expand_path(file)
    create_opts['language'] = File.extname(file)
  end
  file = heap.create(File.open(file).read, create_opts)['url']
else
  file = heap.create(STDIN.read, create_opts)['url']
end

puts file
Copier(file) if opts[:copy]
